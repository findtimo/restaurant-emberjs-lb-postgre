{"version":3,"file":"decorator.js","sources":["../../src/-private/decorator.ts"],"sourcesContent":["import { tracked as glimmerTracked } from '@glimmer/tracking';\nimport { assert } from '@ember/debug';\n\nimport { TrackedMap, TrackedWeakMap } from './map';\nimport { TrackedSet, TrackedWeakSet } from './set';\nimport TrackedArray from './array';\nimport TrackedObject from './object';\n\nexport default function tracked<T>(obj: T[] | typeof Array): TrackedArray<T>;\n\nexport default function tracked<T>(obj: Set<T> | typeof Set): TrackedSet<T>;\n\nexport default function tracked<T, U>(\n  obj: Map<T, U> | typeof Map\n): TrackedMap<T, U>;\n\nexport default function tracked<T extends object>(\n  obj: WeakSet<T> | typeof WeakSet\n): TrackedWeakSet<T>;\n\nexport default function tracked<T extends object, U>(\n  obj: WeakMap<T, U> | typeof WeakMap\n): TrackedWeakMap<T, U>;\n\nexport default function tracked<T extends object>(obj: T | typeof Object): T;\n\nexport default function tracked(\n  obj: object,\n  key: string | symbol,\n  desc?: PropertyDescriptor\n): void;\n\nexport default function tracked(\n  obj: object,\n  key?: string | symbol,\n  desc?: PropertyDescriptor\n): unknown {\n  if (key !== undefined && desc !== undefined) {\n    return glimmerTracked(obj, key, desc);\n  }\n\n  if (Array.isArray(obj)) {\n    return new TrackedArray(obj);\n  }\n\n  switch (obj) {\n    case Object:\n      return new TrackedObject();\n    case Array:\n      return new TrackedArray();\n    case Map:\n      return new TrackedMap();\n    case WeakMap:\n      return new TrackedWeakMap();\n    case Set:\n      return new TrackedSet();\n    case WeakSet:\n      return new TrackedWeakSet();\n  }\n\n  if (obj instanceof Map) {\n    return new TrackedMap(obj);\n  } else if (obj instanceof WeakMap) {\n    return new TrackedWeakMap();\n  } else if (obj instanceof Set) {\n    return new TrackedSet(obj);\n  } else if (obj instanceof WeakSet) {\n    return new TrackedWeakSet();\n  } else {\n    assert(\n      `You must either use tracked as a field decorator, or to wrap built-in class instances:\n\n      class Example {\n        @tracked field = 123;\n\n        map = tracked(Map);\n        map = tracked(new Map());\n      }`,\n      typeof obj === 'object' && obj !== null\n    );\n\n    return new TrackedObject(obj as Record<PropertyKey, unknown>);\n  }\n}\n"],"names":["tracked","obj","key","desc","undefined","glimmerTracked","Array","isArray","TrackedArray","Object","TrackedObject","Map","TrackedMap","WeakMap","TrackedWeakMap","Set","TrackedSet","WeakSet","TrackedWeakSet","assert"],"mappings":";;;;;;;AAgCe,SAASA,OAAO,CAC7BC,GAAW,EACXC,GAAqB,EACrBC,IAAyB,EAChB;AACT,EAAA,IAAID,GAAG,KAAKE,SAAS,IAAID,IAAI,KAAKC,SAAS,EAAE;AAC3C,IAAA,OAAOC,SAAc,CAACJ,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAA;AACvC,GAAA;AAEA,EAAA,IAAIG,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC,EAAE;AACtB,IAAA,OAAO,IAAIO,YAAY,CAACP,GAAG,CAAC,CAAA;AAC9B,GAAA;AAEA,EAAA,QAAQA,GAAG;AACT,IAAA,KAAKQ,MAAM;MACT,OAAO,IAAIC,aAAa,EAAE,CAAA;AAC5B,IAAA,KAAKJ,KAAK;MACR,OAAO,IAAIE,YAAY,EAAE,CAAA;AAC3B,IAAA,KAAKG,GAAG;MACN,OAAO,IAAIC,UAAU,EAAE,CAAA;AACzB,IAAA,KAAKC,OAAO;MACV,OAAO,IAAIC,cAAc,EAAE,CAAA;AAC7B,IAAA,KAAKC,GAAG;MACN,OAAO,IAAIC,UAAU,EAAE,CAAA;AACzB,IAAA,KAAKC,OAAO;MACV,OAAO,IAAIC,cAAc,EAAE,CAAA;AAAC,GAAA;EAGhC,IAAIjB,GAAG,YAAYU,GAAG,EAAE;AACtB,IAAA,OAAO,IAAIC,UAAU,CAACX,GAAG,CAAC,CAAA;AAC5B,GAAC,MAAM,IAAIA,GAAG,YAAYY,OAAO,EAAE;IACjC,OAAO,IAAIC,cAAc,EAAE,CAAA;AAC7B,GAAC,MAAM,IAAIb,GAAG,YAAYc,GAAG,EAAE;AAC7B,IAAA,OAAO,IAAIC,UAAU,CAACf,GAAG,CAAC,CAAA;AAC5B,GAAC,MAAM,IAAIA,GAAG,YAAYgB,OAAO,EAAE;IACjC,OAAO,IAAIC,cAAc,EAAE,CAAA;AAC7B,GAAC,MAAM;AACLC,IAAAA,MAAM,CACH,CAAA;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAQ,CAAA,EACF,OAAOlB,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,CACxC,CAAA;AAED,IAAA,OAAO,IAAIS,aAAa,CAACT,GAAG,CAAiC,CAAA;AAC/D,GAAA;AACF;;;;"}