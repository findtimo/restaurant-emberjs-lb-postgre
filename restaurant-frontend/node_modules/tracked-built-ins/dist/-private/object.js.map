{"version":3,"file":"object.js","sources":["../../src/-private/object.js"],"sourcesContent":["import {\n  createStorage,\n  getValue,\n  setValue,\n} from 'ember-tracked-storage-polyfill';\n\nexport default class TrackedObject {\n  static fromEntries(entries) {\n    return new TrackedObject(Object.fromEntries(entries));\n  }\n\n  constructor(obj = {}) {\n    let proto = Object.getPrototypeOf(obj);\n    let descs = Object.getOwnPropertyDescriptors(obj);\n\n    let clone = Object.create(proto);\n\n    for (let prop in descs) {\n      Object.defineProperty(clone, prop, descs[prop]);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let self = this;\n\n    return new Proxy(clone, {\n      get(target, prop) {\n        self.#readStorageFor(prop);\n\n        return target[prop];\n      },\n\n      has(target, prop) {\n        self.#readStorageFor(prop);\n\n        return prop in target;\n      },\n\n      ownKeys(target) {\n        getValue(self.#collection);\n\n        return Reflect.ownKeys(target);\n      },\n\n      set(target, prop, value) {\n        target[prop] = value;\n\n        self.#dirtyStorageFor(prop);\n        self.#dirtyCollection();\n\n        return true;\n      },\n\n      deleteProperty(target, prop) {\n        if (prop in target) {\n          delete target[prop];\n          self.#dirtyStorageFor(prop);\n          self.#dirtyCollection();\n        }\n\n        return true;\n      },\n\n      getPrototypeOf() {\n        return TrackedObject.prototype;\n      },\n    });\n  }\n\n  #storages = new Map();\n\n  #collection = createStorage(null, () => false);\n\n  #readStorageFor(key) {\n    let storage = this.#storages.get(key);\n\n    if (storage === undefined) {\n      storage = createStorage(null, () => false);\n      this.#storages.set(key, storage);\n    }\n\n    getValue(storage);\n  }\n\n  #dirtyStorageFor(key) {\n    const storage = this.#storages.get(key);\n\n    if (storage) {\n      setValue(storage, null);\n    }\n  }\n\n  #dirtyCollection() {\n    setValue(this.#collection, null);\n  }\n}\n"],"names":["TrackedObject","fromEntries","entries","Object","constructor","obj","Map","createStorage","proto","getPrototypeOf","descs","getOwnPropertyDescriptors","clone","create","prop","defineProperty","self","Proxy","get","target","has","ownKeys","getValue","Reflect","set","value","deleteProperty","prototype","key","storage","undefined","setValue"],"mappings":"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"}