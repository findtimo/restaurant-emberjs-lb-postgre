{"version":3,"file":"setup-session.js","sources":["../../src/internal-session.js","../../src/initializers/setup-session.js"],"sourcesContent":["import RSVP from 'rsvp';\nimport { isEmpty, isNone } from '@ember/utils';\nimport ObjectProxy from '@ember/object/proxy';\nimport Evented from '@ember/object/evented';\nimport { set } from '@ember/object';\nimport { debug, assert } from '@ember/debug';\nimport { getOwner, setOwner } from '@ember/application';\nimport { isTesting } from '@embroider/macros';\n\nexport default ObjectProxy.extend(Evented, {\n  authenticator:       null,\n  store:               null,\n  isAuthenticated:     false,\n  attemptedTransition: null,\n\n  init() {\n    this._super(...arguments);\n    this.set('content', { authenticated: {} });\n    let storeFactory = 'session-store:application';\n    if (isTesting()) {\n      storeFactory = 'session-store:test';\n    }\n\n    this.set('store', getOwner(this).lookup(storeFactory));\n    this._busy = false;\n    this._bindToStoreEvents();\n  },\n\n  authenticate(authenticatorFactory, ...args) {\n    this._busy = true;\n    assert(`Session#authenticate requires the authenticator to be specified, was \"${authenticatorFactory}\"!`, !isEmpty(authenticatorFactory));\n    const authenticator = this._lookupAuthenticator(authenticatorFactory);\n\n    return authenticator.authenticate(...args).then((content) => {\n      this._busy = false;\n      return this._setup(authenticatorFactory, content, true);\n    }, (error) => {\n      const rejectWithError = () => RSVP.Promise.reject(error);\n\n      this._busy = false;\n      return this._clear().then(rejectWithError, rejectWithError);\n    });\n  },\n\n  invalidate() {\n    this._busy = true;\n    this.set('attemptedTransition', null);\n\n    if (!this.get('isAuthenticated')) {\n      this._busy = false;\n      return RSVP.Promise.resolve();\n    }\n\n    let authenticator = this._lookupAuthenticator(this.authenticator);\n    return authenticator.invalidate(this.content.authenticated, ...arguments).then(() => {\n      authenticator.off('sessionDataUpdated', this, this._onSessionDataUpdated);\n      this._busy = false;\n      return this._clear(true);\n    }, (error) => {\n      this.trigger('sessionInvalidationFailed', error);\n      this._busy = false;\n      return RSVP.Promise.reject(error);\n    });\n  },\n\n  restore() {\n    this._busy = true;\n    const reject = () => RSVP.Promise.reject();\n\n    return this.store.restore().then((restoredContent) => {\n      let { authenticator: authenticatorFactory } = restoredContent.authenticated || {};\n      if (authenticatorFactory) {\n        delete restoredContent.authenticated.authenticator;\n        const authenticator = this._lookupAuthenticator(authenticatorFactory);\n        return authenticator.restore(restoredContent.authenticated).then((content) => {\n          this.set('content', restoredContent);\n          this._busy = false;\n          return this._setup(authenticatorFactory, content);\n        }, (err) => {\n          debug(`The authenticator \"${authenticatorFactory}\" rejected to restore the session - invalidating…`);\n          if (err) {\n            debug(err);\n          }\n          this._busy = false;\n          return this._clearWithContent(restoredContent).then(reject, reject);\n        });\n      } else {\n        delete (restoredContent || {}).authenticated;\n        this._busy = false;\n        return this._clearWithContent(restoredContent).then(reject, reject);\n      }\n    }, () => {\n      this._busy = false;\n      return this._clear().then(reject, reject);\n    });\n  },\n\n  _setup(authenticator, authenticatedContent, trigger) {\n    trigger = Boolean(trigger) && !this.get('isAuthenticated');\n    this.setProperties({\n      isAuthenticated: true,\n      authenticator,\n      'content.authenticated': authenticatedContent\n    });\n    this._bindToAuthenticatorEvents();\n\n    return this._updateStore()\n      .then(() => {\n        if (trigger) {\n          this.trigger('authenticationSucceeded');\n        }\n      }, () => {\n        this.setProperties({\n          isAuthenticated: false,\n          authenticator: null,\n          'content.authenticated': {}\n        });\n      });\n  },\n\n  _clear(trigger) {\n    trigger = Boolean(trigger) && this.get('isAuthenticated');\n    this.setProperties({\n      isAuthenticated: false,\n      authenticator:   null,\n      'content.authenticated': {}\n    });\n\n    return this._updateStore().then(() => {\n      if (trigger) {\n        this.trigger('invalidationSucceeded');\n      }\n    });\n  },\n\n  _clearWithContent(content, trigger) {\n    this.set('content', content);\n    return this._clear(trigger);\n  },\n\n  setUnknownProperty(key, value) {\n    assert('\"authenticated\" is a reserved key used by Ember Simple Auth!', key !== 'authenticated');\n    let result = this._super(key, value);\n    if (!(/^_/).test(key)) {\n      this._updateStore();\n    }\n    return result;\n  },\n\n  _updateStore() {\n    let data = this.content;\n    if (!isEmpty(this.authenticator)) {\n      set(data, 'authenticated', Object.assign({ authenticator: this.authenticator }, data.authenticated || {}));\n    }\n    return this.store.persist(data);\n  },\n\n  _bindToAuthenticatorEvents() {\n    const authenticator = this._lookupAuthenticator(this.authenticator);\n    authenticator.on('sessionDataUpdated', this, this._onSessionDataUpdated);\n    authenticator.on('sessionDataInvalidated', this, this._onSessionDataInvalidated);\n  },\n\n  _onSessionDataUpdated(content) {\n    this._setup(this.authenticator, content);\n  },\n\n  _onSessionDataInvalidated() {\n    this._clear(true);\n  },\n\n  _bindToStoreEvents() {\n    this.store.on('sessionDataUpdated', (content) => {\n      if (!this._busy) {\n        this._busy = true;\n        let { authenticator: authenticatorFactory } = (content.authenticated || {});\n        if (authenticatorFactory) {\n          delete content.authenticated.authenticator;\n          const authenticator = this._lookupAuthenticator(authenticatorFactory);\n          authenticator.restore(content.authenticated).then((authenticatedContent) => {\n            this.set('content', content);\n            this._busy = false;\n            this._setup(authenticatorFactory, authenticatedContent, true);\n          }, (err) => {\n            debug(`The authenticator \"${authenticatorFactory}\" rejected to restore the session - invalidating…`);\n            if (err) {\n              debug(err);\n            }\n            this._busy = false;\n            this._clearWithContent(content, true);\n          });\n        } else {\n          this._busy = false;\n          this._clearWithContent(content, true);\n        }\n      }\n    });\n  },\n\n  _lookupAuthenticator(authenticatorName) {\n    let owner = getOwner(this);\n    let authenticator = owner.lookup(authenticatorName);\n    assert(`No authenticator for factory \"${authenticatorName}\" could be found!`, !isNone(authenticator));\n    setOwner(authenticator, owner);\n    return authenticator;\n  }\n});\n","import InternalSession from '../internal-session';\nimport Ephemeral from '../session-stores/ephemeral';\nimport { isTesting } from '@embroider/macros';\n\nexport default function setupSession(registry) {\n  registry.register('session:main', InternalSession);\n\n  if (isTesting()) {\n    registry.register('session-store:test', Ephemeral);\n  }\n}\n"],"names":["ObjectProxy","extend","Evented","authenticator","store","isAuthenticated","attemptedTransition","init","_super","arguments","set","authenticated","storeFactory","isTesting","getOwner","lookup","_busy","_bindToStoreEvents","authenticate","authenticatorFactory","args","assert","isEmpty","_lookupAuthenticator","then","content","_setup","error","rejectWithError","RSVP","Promise","reject","_clear","invalidate","get","resolve","off","_onSessionDataUpdated","trigger","restore","restoredContent","err","debug","_clearWithContent","authenticatedContent","Boolean","setProperties","_bindToAuthenticatorEvents","_updateStore","setUnknownProperty","key","value","result","test","data","Object","assign","persist","on","_onSessionDataInvalidated","authenticatorName","owner","isNone","setOwner","setupSession","registry","register","InternalSession","Ephemeral"],"mappings":"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"}