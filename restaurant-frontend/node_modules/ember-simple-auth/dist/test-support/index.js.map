{"version":3,"file":"index.js","sources":["../../src/test-support/index.js"],"sourcesContent":["import { get } from '@ember/object';\nimport { getContext, settled } from '@ember/test-helpers';\nimport Promise from 'rsvp';\nimport Test from '../authenticators/test';\n\nconst SESSION_SERVICE_KEY = 'service:session';\nconst TEST_CONTAINER_KEY = 'authenticator:test';\n\nfunction ensureAuthenticator(owner) {\n  const authenticator = owner.lookup(TEST_CONTAINER_KEY);\n  if (!authenticator) {\n    owner.register(TEST_CONTAINER_KEY, Test);\n  }\n}\n\n/**\n * Authenticates the session.\n *\n * @param {Object} sessionData Optional argument used to mock an authenticator\n * response (e.g. a token or user).\n * @return {Promise}\n * @public\n */\nexport function authenticateSession(sessionData) {\n  const { owner } = getContext();\n  const session = owner.lookup(SESSION_SERVICE_KEY);\n  ensureAuthenticator(owner);\n  return session.authenticate(TEST_CONTAINER_KEY, sessionData).then(() => {\n    return settled();\n  });\n}\n\n/**\n * Returns the current session.\n *\n * @return {Object} a session service.\n * @public\n */\nexport function currentSession() {\n  const { owner } = getContext();\n  return owner.lookup(SESSION_SERVICE_KEY);\n}\n\n/**\n * Invalidates the session.\n *\n * @return {Promise}\n * @public\n */\nexport function invalidateSession() {\n  const { owner } = getContext();\n  const session = owner.lookup(SESSION_SERVICE_KEY);\n  const isAuthenticated = get(session, 'isAuthenticated');\n  return Promise.resolve().then(() => {\n    if (isAuthenticated) {\n      return session.invalidate();\n    }\n  })\n    .then(() => settled());\n}\n"],"names":["SESSION_SERVICE_KEY","TEST_CONTAINER_KEY","ensureAuthenticator","owner","authenticator","lookup","register","Test","authenticateSession","sessionData","getContext","session","authenticate","then","settled","currentSession","invalidateSession","isAuthenticated","get","Promise","resolve","invalidate"],"mappings":";;;;;AAKA,MAAMA,mBAAmB,GAAG,iBAAiB,CAAA;AAC7C,MAAMC,kBAAkB,GAAG,oBAAoB,CAAA;AAE/C,SAASC,mBAAmBA,CAACC,KAAK,EAAE;AAClC,EAAA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACJ,kBAAkB,CAAC,CAAA;EACtD,IAAI,CAACG,aAAa,EAAE;AAClBD,IAAAA,KAAK,CAACG,QAAQ,CAACL,kBAAkB,EAAEM,IAAI,CAAC,CAAA;AAC1C,GAAA;AACF,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,mBAAmBA,CAACC,WAAW,EAAE;EAC/C,MAAM;AAAEN,IAAAA,KAAAA;GAAO,GAAGO,UAAU,EAAE,CAAA;AAC9B,EAAA,MAAMC,OAAO,GAAGR,KAAK,CAACE,MAAM,CAACL,mBAAmB,CAAC,CAAA;EACjDE,mBAAmB,CAACC,KAAK,CAAC,CAAA;EAC1B,OAAOQ,OAAO,CAACC,YAAY,CAACX,kBAAkB,EAAEQ,WAAW,CAAC,CAACI,IAAI,CAAC,MAAM;IACtE,OAAOC,OAAO,EAAE,CAAA;AAClB,GAAC,CAAC,CAAA;AACJ,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,GAAG;EAC/B,MAAM;AAAEZ,IAAAA,KAAAA;GAAO,GAAGO,UAAU,EAAE,CAAA;AAC9B,EAAA,OAAOP,KAAK,CAACE,MAAM,CAACL,mBAAmB,CAAC,CAAA;AAC1C,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgB,iBAAiBA,GAAG;EAClC,MAAM;AAAEb,IAAAA,KAAAA;GAAO,GAAGO,UAAU,EAAE,CAAA;AAC9B,EAAA,MAAMC,OAAO,GAAGR,KAAK,CAACE,MAAM,CAACL,mBAAmB,CAAC,CAAA;AACjD,EAAA,MAAMiB,eAAe,GAAGC,GAAG,CAACP,OAAO,EAAE,iBAAiB,CAAC,CAAA;EACvD,OAAOQ,IAAO,CAACC,OAAO,EAAE,CAACP,IAAI,CAAC,MAAM;AAClC,IAAA,IAAII,eAAe,EAAE;AACnB,MAAA,OAAON,OAAO,CAACU,UAAU,EAAE,CAAA;AAC7B,KAAA;GACD,CAAC,CACCR,IAAI,CAAC,MAAMC,OAAO,EAAE,CAAC,CAAA;AAC1B;;;;"}