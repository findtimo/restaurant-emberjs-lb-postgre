/* IMPORT */
import { NOOP } from './constants.js';
/* MAIN */
const makeNakedPromise = () => {
    let resolve = NOOP;
    let reject = NOOP;
    let resolved = false;
    let rejected = false;
    const promise = new Promise((res, rej) => {
        resolve = value => {
            resolved = true;
            return res(value);
        };
        reject = value => {
            rejected = true;
            return rej(value);
        };
    });
    const isPending = () => !resolved && !rejected;
    const isResolved = () => resolved;
    const isRejected = () => rejected;
    return { promise, resolve, reject, isPending, isResolved, isRejected };
};
/* UTILITIES */
makeNakedPromise.wrap = async (fn) => {
    const result = makeNakedPromise();
    await fn(result);
    return result.promise;
};
/* EXPORT */
export default makeNakedPromise;
