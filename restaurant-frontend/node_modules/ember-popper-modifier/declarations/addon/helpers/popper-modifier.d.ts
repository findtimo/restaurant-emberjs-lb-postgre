/// <reference types="ember-source/types/stable/@ember/-internals/glimmer/lib/helper" />
/// <reference types="ember-source/types/stable/@ember/component/helper" />
/// <reference types="node_modules/.pnpm/@glint+environment-ember-loose@1.3.0_@glimmer+component@1.1.2_@glint+template@1.3.0_ember-cli_l6xgw6eurl2ircrtdoorkrjyuq/node_modules/@glint/environment-ember-loose/-private/dsl/integration-declarations" />
import { type PopperModifierDescription } from '../index';
import type { Modifier as PopperModifier } from '@popperjs/core';
type PopperModifierOptions = Partial<PopperModifier<unknown, {
    [key: string]: unknown;
}>>['options'];
export interface PopperSignature {
    Args: {
        Positional: [string, ...PopperModifierOptions[]];
        Named: PopperModifierOptions;
    };
    Return: PopperModifierDescription;
}
export declare function buildPopperModifier([name, positionalOptions]: PopperSignature['Args']['Positional'], optionsHash: PopperSignature['Args']['Named']): PopperModifierDescription;
declare const _default: import("@ember/component/helper").FunctionBasedHelper<PopperSignature>;
export default _default;
//# sourceMappingURL=popper-modifier.d.ts.map