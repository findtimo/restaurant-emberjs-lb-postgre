{"version":3,"file":"index.js","sources":["../../index.ts"],"sourcesContent":["export const OWNER: unique symbol = Symbol('OWNER') as any;\n\ninterface OwnedObject<O extends object> {\n  [OWNER]: O | undefined;\n}\n\n/**\n  Framework objects in a Glimmer application may receive an owner object.\n  Glimmer is unopinionated about this owner, but will forward it through its\n  internal resolution system, and through its managers if it is provided.\n*/\nexport function getOwner<O extends object = object>(object: object): O | undefined {\n  return (object as OwnedObject<O>)[OWNER];\n}\n\n/**\n  `setOwner` set's an object's owner\n*/\nexport function setOwner<O extends object = object>(object: object, owner: O): void {\n  (object as OwnedObject<O>)[OWNER] = owner;\n}\n"],"names":["OWNER","Symbol","getOwner","object","setOwner","owner"],"mappings":"MAAaA,EAAuBC,OAAO,SAWpC,SAASC,EAAoCC,GAClD,OAAQA,EAA0BH,EACpC,CAKO,SAASI,EAAoCD,EAAgBE,GACjEF,EAA0BH,GAASK,CACtC"}