{"version":3,"file":"working-dir.js","sourceRoot":"","sources":["working-dir.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAC/B,2BAAgC;AAChC,uCAAwC;AAExC,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAExB,sEAAsE;AACtE,SAAgB,yBAAyB,CAAC,OAAe;;IACvD,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;QACtB,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAC3B;IACD,IAAI,IAAA,eAAU,EAAC,IAAA,cAAO,EAAC,OAAO,EAAE,cAAc,CAAC,CAAC,EAAE;QAChD,kBAAkB;QAClB,IAAI,IAAI,GAAG,IAAA,cAAO,EAAC,OAAO,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAC1D,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;KACb;SAAM;QACL,oEAAoE;QACpE,sEAAsE;QACtE,WAAW;QACX,IAAI,IAAA,eAAU,EAAC,IAAA,cAAO,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,EAAE;YAC5D,IAAI,GAAG,GAAG,IAAA,uBAAY,EAAC,IAAA,cAAO,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;YACrE,IAAI,MAAA,GAAG,CAAC,QAAQ,0CAAE,QAAQ,CAAC,aAAa,CAAC,EAAE;gBACzC,IAAI,IAAI,GAAG,IAAA,cAAO,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;gBACtE,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAC;aACb;SACF;QACD,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KACzC;AACH,CAAC;AAvBD,8DAuBC","sourcesContent":["import { resolve } from 'path';\nimport { existsSync } from 'fs';\nimport { readJSONSync } from 'fs-extra';\n\nconst cache = new Map();\n\n// Most of this only exists because of classic dummy apps being weird.\nexport function locateEmbroiderWorkingDir(appRoot: string): string {\n  if (cache.has(appRoot)) {\n    return cache.get(appRoot);\n  }\n  if (existsSync(resolve(appRoot, 'package.json'))) {\n    // the normal case\n    let path = resolve(appRoot, 'node_modules', '.embroider');\n    cache.set(appRoot, path);\n    return path;\n  } else {\n    // probably in a dummy app (sigh), but let's do a little checking to\n    // distinguish that case from someone pointing embroider at a nonsense\n    // location\n    if (existsSync(resolve(appRoot, '..', '..', 'package.json'))) {\n      let pkg = readJSONSync(resolve(appRoot, '..', '..', 'package.json'));\n      if (pkg.keywords?.includes('ember-addon')) {\n        let path = resolve(appRoot, '..', '..', 'node_modules', '.embroider');\n        cache.set(appRoot, path);\n        return path;\n      }\n    }\n    throw new Error('unable to locate app');\n  }\n}\n"]}