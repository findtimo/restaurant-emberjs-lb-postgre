{"version":3,"file":"package-name.js","sourceRoot":"","sources":["package-name.ts"],"names":[],"mappings":";;AAAA,+BAAkC;AAElC,SAAwB,mBAAmB,CAAC,SAAiB;IAC3D;IACE,kBAAkB;IAClB,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG;QACpB,sDAAsD;QACtD,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG;QACpB,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG;QACpB,kBAAkB;QAClB,IAAA,iBAAU,EAAC,SAAS,CAAC,EACrB;QACA,8BAA8B;QAC9B,OAAO;KACR;IACD,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACxB,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;KAClC;SAAM;QACL,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACjB;AACH,CAAC;AAnBD,sCAmBC","sourcesContent":["import { isAbsolute } from 'path';\n\nexport default function absolutePackageName(specifier: string): string | undefined {\n  if (\n    // relative paths:\n    specifier[0] === '.' ||\n    // webpack-specific microsyntax for internal requests:\n    specifier[0] === '!' ||\n    specifier[0] === '-' ||\n    // absolute paths:\n    isAbsolute(specifier)\n  ) {\n    // Does not refer to a package\n    return;\n  }\n  let parts = specifier.split('/');\n  if (specifier[0] === '@') {\n    return `${parts[0]}/${parts[1]}`;\n  } else {\n    return parts[0];\n  }\n}\n"]}