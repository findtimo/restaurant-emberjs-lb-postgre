{"version":3,"file":"migration-support.js","sources":["../src/migration-support.ts"],"sourcesContent":["import { assert } from '@ember/debug';\n\nimport { recordIdentifierFor } from '@ember-data/store';\nimport type { FieldSchema } from '@ember-data/store/-types/q/schema-service';\n\nimport { Errors } from './-private';\nimport type { MinimalLegacyRecord } from './-private/model-methods';\nimport {\n  belongsTo,\n  changedAttributes,\n  createSnapshot,\n  deleteRecord,\n  destroyRecord,\n  hasMany,\n  reload,\n  rollbackAttributes,\n  save,\n  serialize,\n  unloadRecord,\n} from './-private/model-methods';\nimport RecordState from './-private/record-state';\n\ntype Derivation<R, T> = (record: R, options: Record<string, unknown> | null, prop: string) => T;\ntype SchemaService = {\n  registerDerivation(name: string, derivation: Derivation<unknown, unknown>): void;\n};\n// 'isDestroying', 'isDestroyed'\nconst LegacyFields = [\n  '_createSnapshot',\n  'adapterError',\n  'belongsTo',\n  'changedAttributes',\n  'constructor',\n  'currentState',\n  'deleteRecord',\n  'destroyRecord',\n  'dirtyType',\n  'errors',\n  'hasDirtyAttributes',\n  'hasMany',\n  'isDeleted',\n  'isEmpty',\n  'isError',\n  'isLoaded',\n  'isLoading',\n  'isNew',\n  'isSaving',\n  'isValid',\n  'reload',\n  'rollbackAttributes',\n  'save',\n  'serialize',\n  'unloadRecord',\n];\n\nconst LegacySupport = new WeakMap<MinimalLegacyRecord, Record<string, unknown>>();\n\nfunction legacySupport(record: MinimalLegacyRecord, options: Record<string, unknown> | null, prop: string): unknown {\n  let state = LegacySupport.get(record);\n  if (!state) {\n    state = {};\n    LegacySupport.set(record, state);\n  }\n\n  switch (prop) {\n    case '_createSnapshot':\n      return createSnapshot;\n    case 'adapterError':\n      return record.currentState.adapterError;\n    case 'belongsTo':\n      return belongsTo;\n    case 'changedAttributes':\n      return changedAttributes;\n    case 'constructor':\n      return (state._constructor = state._constructor || {\n        isModel: true,\n        name: `Record<${recordIdentifierFor(record).type}>`,\n        modelName: recordIdentifierFor(record).type,\n      });\n    case 'currentState':\n      return (state.recordState = state.recordState || new RecordState(record));\n    case 'deleteRecord':\n      return deleteRecord;\n    case 'destroyRecord':\n      return destroyRecord;\n    case 'dirtyType':\n      return record.currentState.dirtyType;\n    case 'errors':\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      return (state.errors = state.errors || Errors.create({ __record: record }));\n    case 'hasDirtyAttributes':\n      return record.currentState.isDirty;\n    case 'hasMany':\n      return hasMany;\n    case 'isDeleted':\n      return record.currentState.isDeleted;\n    case 'isEmpty':\n      return record.currentState.isEmpty;\n    case 'isError':\n      return record.currentState.isError;\n    case 'isLoaded':\n      return record.currentState.isLoaded;\n    case 'isLoading':\n      return record.currentState.isLoading;\n    case 'isNew':\n      return record.currentState.isNew;\n    case 'isSaving':\n      return record.currentState.isSaving;\n    case 'isValid':\n      return record.currentState.isValid;\n    case 'reload':\n      return reload;\n    case 'rollbackAttributes':\n      return rollbackAttributes;\n    case 'save':\n      return save;\n    case 'serialize':\n      return serialize;\n    case 'unloadRecord':\n      return unloadRecord;\n    default:\n      assert(`${prop} is not a supported legacy field`, false);\n  }\n}\n\nexport function withFields(fields: FieldSchema[]) {\n  LegacyFields.forEach((field) => {\n    fields.push({\n      type: '@legacy',\n      name: field,\n      kind: 'derived',\n    });\n  });\n  fields.push({\n    name: 'id',\n    kind: '@id',\n    type: null,\n  });\n  fields.push({\n    name: 'isReloading',\n    kind: '@local',\n    type: 'boolean',\n    options: { defaultValue: false },\n  });\n  fields.push({\n    name: 'isDestroying',\n    kind: '@local',\n    type: 'boolean',\n    options: { defaultValue: false },\n  });\n  fields.push({\n    name: 'isDestroyed',\n    kind: '@local',\n    type: 'boolean',\n    options: { defaultValue: false },\n  });\n  return fields;\n}\n\nexport function registerDerivations(schema: SchemaService) {\n  schema.registerDerivation('@legacy', legacySupport as Derivation<unknown, unknown>);\n}\n"],"names":["LegacyFields","LegacySupport","WeakMap","legacySupport","record","options","prop","state","get","set","createSnapshot","currentState","adapterError","belongsTo","changedAttributes","_constructor","isModel","name","recordIdentifierFor","type","modelName","recordState","RecordState","deleteRecord","destroyRecord","dirtyType","errors","Errors","create","__record","isDirty","hasMany","isDeleted","isEmpty","isError","isLoaded","isLoading","isNew","isSaving","isValid","reload","rollbackAttributes","save","serialize","unloadRecord","assert","withFields","fields","forEach","field","push","kind","defaultValue","registerDerivations","schema","registerDerivation"],"mappings":"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"}