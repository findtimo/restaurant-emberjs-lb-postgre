{"version":3,"file":"fetch.js","sources":["../src/fetch.ts"],"sourcesContent":["/**\n * A basic Fetch Handler which converts a request into a\n * `fetch` call presuming the response to be `json`.\n *\n * ```ts\n * import Fetch from '@ember-data/request/fetch';\n *\n * manager.use([Fetch]);\n * ```\n *\n * @module @ember-data/request/fetch\n * @main @ember-data/request/fetch\n */\nimport { getOwnConfig, macroCondition } from '@embroider/macros';\n\nimport { cloneResponseProperties, type Context } from './-private/context';\nimport type { HttpErrorProps } from './-private/utils';\n\n// Lazily close over fetch to avoid breaking Mirage\nconst _fetch: typeof fetch =\n  typeof fetch !== 'undefined'\n    ? (...args) => fetch(...args)\n    : typeof FastBoot !== 'undefined'\n      ? (...args) => (FastBoot.require('node-fetch') as typeof fetch)(...args)\n      : ((() => {\n          throw new Error('No Fetch Implementation Found');\n        }) as typeof fetch);\n\n// clones a response in a way that should still\n// allow it to stream\nfunction cloneResponse(response: Response, overrides: Partial<Response>) {\n  const props = cloneResponseProperties(response);\n  return new Response(response.body, Object.assign(props, overrides));\n}\n\nlet IS_MAYBE_MIRAGE = () => false;\nif (macroCondition(getOwnConfig<{ env: { TESTING: boolean } }>().env.TESTING)) {\n  IS_MAYBE_MIRAGE = () =>\n    Boolean(typeof window !== 'undefined' && (window as { server?: { pretender: unknown } }).server?.pretender);\n}\n\nconst MUTATION_OPS = new Set(['updateRecord', 'createRecord', 'deleteRecord']);\nconst ERROR_STATUS_CODE_FOR = new Map([\n  [400, 'Bad Request'],\n  [401, 'Unauthorized'],\n  [402, 'Payment Required'],\n  [403, 'Forbidden'],\n  [404, 'Not Found'],\n  [405, 'Method Not Allowed'],\n  [406, 'Not Acceptable'],\n  [407, 'Proxy Authentication Required'],\n  [408, 'Request Timeout'],\n  [409, 'Conflict'],\n  [410, 'Gone'],\n  [411, 'Length Required'],\n  [412, 'Precondition Failed'],\n  [413, 'Payload Too Large'],\n  [414, 'URI Too Long'],\n  [415, 'Unsupported Media Type'],\n  [416, 'Range Not Satisfiable'],\n  [417, 'Expectation Failed'],\n  [419, 'Page Expired'],\n  [420, 'Enhance Your Calm'],\n  [421, 'Misdirected Request'],\n  [422, 'Unprocessable Entity'],\n  [423, 'Locked'],\n  [424, 'Failed Dependency'],\n  [425, 'Too Early'],\n  [426, 'Upgrade Required'],\n  [428, 'Precondition Required'],\n  [429, 'Too Many Requests'],\n  [430, 'Request Header Fields Too Large'],\n  [431, 'Request Header Fields Too Large'],\n  [450, 'Blocked By Windows Parental Controls'],\n  [451, 'Unavailable For Legal Reasons'],\n  [500, 'Internal Server Error'],\n  [501, 'Not Implemented'],\n  [502, 'Bad Gateway'],\n  [503, 'Service Unavailable'],\n  [504, 'Gateway Timeout'],\n  [505, 'HTTP Version Not Supported'],\n  [506, 'Variant Also Negotiates'],\n  [507, 'Insufficient Storage'],\n  [508, 'Loop Detected'],\n  [509, 'Bandwidth Limit Exceeded'],\n  [510, 'Not Extended'],\n  [511, 'Network Authentication Required'],\n]);\n\n/**\n * A basic handler which converts a request into a\n * `fetch` call presuming the response to be `json`.\n *\n * ```ts\n * import Fetch from '@ember-data/request/fetch';\n *\n * manager.use([Fetch]);\n * ```\n *\n * @class Fetch\n * @public\n */\nconst Fetch = {\n  async request(context: Context) {\n    let response: Response;\n\n    try {\n      response = await _fetch(context.request.url!, context.request);\n    } catch (e) {\n      if (e instanceof DOMException && e.name === 'AbortError') {\n        (e as unknown as HttpErrorProps).statusText = 'Aborted';\n        (e as unknown as HttpErrorProps).status = 20;\n        (e as unknown as HttpErrorProps).isRequestError = true;\n      } else {\n        (e as HttpErrorProps).statusText = 'Unknown Network Error';\n        (e as HttpErrorProps).status = 0;\n        (e as HttpErrorProps).isRequestError = true;\n      }\n      throw e;\n    }\n\n    const isError = !response.ok || response.status >= 400;\n    const op = context.request.op;\n    const isMutationOp = Boolean(op && MUTATION_OPS.has(op));\n\n    if (!isError && !isMutationOp && response.status !== 204 && !response.headers.has('date')) {\n      if (IS_MAYBE_MIRAGE()) {\n        response.headers.set('date', new Date().toUTCString());\n      } else {\n        const headers = new Headers(response.headers);\n        headers.set('date', new Date().toUTCString());\n        response = cloneResponse(response, {\n          headers,\n        });\n      }\n    }\n\n    context.setResponse(response);\n\n    // if we are an error, we will want to throw\n    if (isError) {\n      const text = await response.text();\n      let errorPayload: object | undefined;\n      try {\n        errorPayload = JSON.parse(text) as object;\n      } catch {\n        // void;\n      }\n      // attempt errors discovery\n      const errors = Array.isArray(errorPayload)\n        ? errorPayload\n        : isDict(errorPayload) && Array.isArray(errorPayload.errors)\n          ? errorPayload.errors\n          : null;\n\n      const statusText = response.statusText || ERROR_STATUS_CODE_FOR.get(response.status) || 'Unknown Request Error';\n      const msg = `[${response.status} ${statusText}] ${context.request.method ?? 'GET'} (${response.type}) - ${\n        response.url\n      }`;\n\n      const error = (errors ? new AggregateError(errors, msg) : new Error(msg)) as Error & {\n        content: object | undefined;\n      } & HttpErrorProps;\n      error.status = response.status;\n      error.statusText = statusText;\n      error.isRequestError = true;\n      error.code = error.status;\n      error.name = error.statusText.replaceAll(' ', '') + 'Error';\n      error.content = errorPayload;\n      throw error;\n    } else {\n      return response.status === 204 ? null : response.json();\n    }\n  },\n};\n\nfunction isDict(v: unknown): v is Record<string, unknown> {\n  return v !== null && typeof v === 'object';\n}\n\nexport default Fetch;\n"],"names":["_fetch","fetch","args","FastBoot","require","Error","cloneResponse","response","overrides","props","cloneResponseProperties","Response","body","Object","assign","IS_MAYBE_MIRAGE","macroCondition","getOwnConfig","env","TESTING","Boolean","window","server","pretender","MUTATION_OPS","Set","ERROR_STATUS_CODE_FOR","Map","Fetch","request","context","url","e","DOMException","name","statusText","status","isRequestError","isError","ok","op","isMutationOp","has","headers","set","Date","toUTCString","Headers","setResponse","text","errorPayload","JSON","parse","errors","Array","isArray","isDict","get","msg","method","type","error","AggregateError","code","replaceAll","content","json","v"],"mappings":"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"}