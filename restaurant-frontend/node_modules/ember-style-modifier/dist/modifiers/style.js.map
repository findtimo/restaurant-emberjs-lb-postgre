{"version":3,"file":"style.js","sources":["../../src/modifiers/style.ts"],"sourcesContent":["import Modifier from 'ember-modifier';\nimport { dasherize } from '@ember/string';\nimport { assert } from '@ember/debug';\nimport { typeOf } from '@ember/utils';\nimport type * as CSS from 'csstype';\n\n// Cannot be typed as `Partial<CSSStyleDeclaration>` because `CSSStyleDeclaration`\n// interface does _not_ included dashed CSS property names. It only includes the\n// camelCase version of a CSS property.\n// https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1672\ntype CSSStyles =\n  | Partial<CSS.Properties>\n  | Partial<CSS.PropertiesHyphen>\n  | { readonly [key: `--${string}`]: string };\n\nfunction isObject(o: unknown): boolean {\n  return typeof o === 'object' && Boolean(o);\n}\n\n/**\n * Returns a two-dimensional array, like:\n *\n * ```js\n * [\n *   ['font-size', '16px'],\n *   ['text-align', 'center'],\n *   ['color', 'red']\n * ]\n * ```\n *\n * This data structure is slightly faster to process than an object / dictionary.\n */\nfunction compileStyles(\n  positional: CSSStyles[],\n  named: CSSStyles,\n): [string, string][] {\n  return [...positional.filter(isObject), named]\n    .map((obj) =>\n      Object.entries(obj).map(\n        ([k, v]) => [dasherize(k), v] as [string, string],\n      ),\n    )\n    .flat();\n}\n\nexport interface StyleModifierSignature {\n  Element: Element & ElementCSSInlineStyle;\n  Args: {\n    Positional: CSSStyles[];\n    Named: CSSStyles;\n  };\n}\n\nexport default class StyleModifier extends Modifier<StyleModifierSignature> {\n  existingStyles: Set<string> = new Set();\n\n  setStyles(\n    element: StyleModifierSignature['Element'],\n    newStyles: [string, string][],\n  ) {\n    const { existingStyles } = this;\n    const rulesToRemove: Set<string> = new Set(existingStyles);\n\n    // clear cache of existing styles\n    existingStyles.clear();\n\n    newStyles.forEach(([property, value]) => {\n      assert(\n        `Your given value for property '${property}' is ${value} (${typeOf(\n          value,\n        )}). ` +\n          'Accepted types are string and undefined. Please change accordingly.',\n        typeof value === 'undefined' || typeOf(value) === 'string',\n      );\n\n      // priority must be specified as separate argument\n      // value must not contain \"!important\"\n      let priority = '';\n      if (value && value.includes('!important')) {\n        priority = 'important';\n        value = value.replace('!important', '');\n      }\n\n      // update CSSOM\n      element.style.setProperty(property, value, priority);\n\n      // should not remove rules that have been updated in this cycle\n      rulesToRemove.delete(property);\n\n      // cache styles that have been set for potential clean-up when argument changes\n      existingStyles.add(property);\n    });\n\n    // remove rules that were present in last cycle but aren't present in this one\n    rulesToRemove.forEach((rule) => element.style.removeProperty(rule));\n  }\n\n  modify(\n    element: StyleModifierSignature['Element'],\n    positional: [CSSStyles] | [],\n    named: CSSStyles,\n  ) {\n    this.setStyles(element, compileStyles(positional, named));\n  }\n}\n"],"names":["isObject","o","Boolean","compileStyles","positional","named","filter","map","obj","Object","entries","k","v","dasherize","flat","StyleModifier","Modifier","existingStyles","Set","setStyles","element","newStyles","rulesToRemove","clear","forEach","property","value","assert","typeOf","priority","includes","replace","style","setProperty","delete","add","rule","removeProperty","modify"],"mappings":";;;;;AAMA;AACA;AACA;AACA;;AAMA,SAASA,QAAQA,CAACC,CAAU,EAAW;EACrC,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIC,OAAO,CAACD,CAAC,CAAC,CAAA;AAC5C,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,aAAaA,CACpBC,UAAuB,EACvBC,KAAgB,EACI;EACpB,OAAO,CAAC,GAAGD,UAAU,CAACE,MAAM,CAACN,QAAQ,CAAC,EAAEK,KAAK,CAAC,CAC3CE,GAAG,CAAEC,GAAG,IACPC,MAAM,CAACC,OAAO,CAACF,GAAG,CAAC,CAACD,GAAG,CACrB,CAAC,CAACI,CAAC,EAAEC,CAAC,CAAC,KAAK,CAACC,SAAS,CAACF,CAAC,CAAC,EAAEC,CAAC,CAC9B,CACF,CAAC,CACAE,IAAI,EAAE,CAAA;AACX,CAAA;AAUe,MAAMC,aAAa,SAASC,QAAQ,CAAyB;AAC1EC,EAAAA,cAAc,GAAgB,IAAIC,GAAG,EAAE,CAAA;AAEvCC,EAAAA,SAASA,CACPC,OAA0C,EAC1CC,SAA6B,EAC7B;IACA,MAAM;AAAEJ,MAAAA,cAAAA;AAAe,KAAC,GAAG,IAAI,CAAA;AAC/B,IAAA,MAAMK,aAA0B,GAAG,IAAIJ,GAAG,CAACD,cAAc,CAAC,CAAA;;AAE1D;IACAA,cAAc,CAACM,KAAK,EAAE,CAAA;IAEtBF,SAAS,CAACG,OAAO,CAAC,CAAC,CAACC,QAAQ,EAAEC,KAAK,CAAC,KAAK;MACvCC,MAAM,CACH,CAAiCF,+BAAAA,EAAAA,QAAS,CAAOC,KAAAA,EAAAA,KAAM,KAAIE,MAAM,CAChEF,KACF,CAAE,CAAI,GAAA,CAAA,GACJ,qEAAqE,EACvE,OAAOA,KAAK,KAAK,WAAW,IAAIE,MAAM,CAACF,KAAK,CAAC,KAAK,QACpD,CAAC,CAAA;;AAED;AACA;MACA,IAAIG,QAAQ,GAAG,EAAE,CAAA;MACjB,IAAIH,KAAK,IAAIA,KAAK,CAACI,QAAQ,CAAC,YAAY,CAAC,EAAE;AACzCD,QAAAA,QAAQ,GAAG,WAAW,CAAA;QACtBH,KAAK,GAAGA,KAAK,CAACK,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAA;AACzC,OAAA;;AAEA;MACAX,OAAO,CAACY,KAAK,CAACC,WAAW,CAACR,QAAQ,EAAEC,KAAK,EAAEG,QAAQ,CAAC,CAAA;;AAEpD;AACAP,MAAAA,aAAa,CAACY,MAAM,CAACT,QAAQ,CAAC,CAAA;;AAE9B;AACAR,MAAAA,cAAc,CAACkB,GAAG,CAACV,QAAQ,CAAC,CAAA;AAC9B,KAAC,CAAC,CAAA;;AAEF;AACAH,IAAAA,aAAa,CAACE,OAAO,CAAEY,IAAI,IAAKhB,OAAO,CAACY,KAAK,CAACK,cAAc,CAACD,IAAI,CAAC,CAAC,CAAA;AACrE,GAAA;AAEAE,EAAAA,MAAMA,CACJlB,OAA0C,EAC1ChB,UAA4B,EAC5BC,KAAgB,EAChB;IACA,IAAI,CAACc,SAAS,CAACC,OAAO,EAAEjB,aAAa,CAACC,UAAU,EAAEC,KAAK,CAAC,CAAC,CAAA;AAC3D,GAAA;AACF;;;;"}