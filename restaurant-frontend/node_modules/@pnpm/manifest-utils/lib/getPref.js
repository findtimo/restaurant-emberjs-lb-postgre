"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createVersionSpec = exports.getPref = exports.getPrefix = void 0;
const error_1 = require("@pnpm/error");
const getPrefix = (alias, name) => alias !== name ? `npm:${name}@` : '';
exports.getPrefix = getPrefix;
function getPref(alias, name, version, opts) {
    const prefix = (0, exports.getPrefix)(alias, name);
    return `${prefix}${createVersionSpec(version, { pinnedVersion: opts.pinnedVersion })}`;
}
exports.getPref = getPref;
function createVersionSpec(version, opts) {
    switch (opts.pinnedVersion ?? 'major') {
        case 'none':
        case 'major':
            if (opts.rolling)
                return '^';
            return !version ? '*' : `^${version}`;
        case 'minor':
            if (opts.rolling)
                return '~';
            return !version ? '*' : `~${version}`;
        case 'patch':
            if (opts.rolling)
                return '*';
            return !version ? '*' : `${version}`;
        default:
            throw new error_1.PnpmError('BAD_PINNED_VERSION', `Cannot pin '${opts.pinnedVersion ?? 'undefined'}'`);
    }
}
exports.createVersionSpec = createVersionSpec;
//# sourceMappingURL=getPref.js.map