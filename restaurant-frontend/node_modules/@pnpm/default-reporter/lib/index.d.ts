/// <reference types="node" />
import { type Config } from '@pnpm/config';
import { type LogLevel } from '@pnpm/logger';
import * as Rx from 'rxjs';
import { formatWarn } from './reporterForClient/utils/formatWarn';
import { type FilterPkgsDiff } from './reporterForClient/reportSummary';
export { formatWarn };
export declare function initDefaultReporter(opts: {
    useStderr?: boolean;
    streamParser: object;
    reportingOptions?: {
        appendOnly?: boolean;
        logLevel?: LogLevel;
        streamLifecycleOutput?: boolean;
        aggregateOutput?: boolean;
        throttleProgress?: number;
        outputMaxWidth?: number;
    };
    context: {
        argv: string[];
        config?: Config;
        env?: NodeJS.ProcessEnv;
        process?: NodeJS.Process;
    };
    filterPkgsDiff?: FilterPkgsDiff;
}): () => void;
export declare function toOutput$(opts: {
    streamParser: object;
    reportingOptions?: {
        appendOnly?: boolean;
        logLevel?: LogLevel;
        outputMaxWidth?: number;
        streamLifecycleOutput?: boolean;
        aggregateOutput?: boolean;
        throttleProgress?: number;
    };
    context: {
        argv: string[];
        config?: Config;
        env?: NodeJS.ProcessEnv;
        process?: NodeJS.Process;
    };
    filterPkgsDiff?: FilterPkgsDiff;
}): Rx.Observable<string>;
