"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.docsUrl = exports.getConfig = void 0;
const cli_meta_1 = require("@pnpm/cli-meta");
var getConfig_1 = require("./getConfig");
Object.defineProperty(exports, "getConfig", { enumerable: true, get: function () { return getConfig_1.getConfig; } });
__exportStar(require("./packageIsInstallable"), exports);
__exportStar(require("./readDepNameCompletions"), exports);
__exportStar(require("./readProjectManifest"), exports);
__exportStar(require("./recursiveSummary"), exports);
__exportStar(require("./style"), exports);
const docsUrl = (cmd) => {
    const [pnpmMajorVersion] = cli_meta_1.packageManager.version.split('.');
    return `https://pnpm.io/${pnpmMajorVersion}.x/cli/${cmd}`;
};
exports.docsUrl = docsUrl;
//# sourceMappingURL=index.js.map